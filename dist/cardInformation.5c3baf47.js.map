{"version":3,"sources":["cardInformation.js"],"names":["travels","milan","city","country","information","venice","berlin","fraiburg","athens","madrid","barcelona","portu","lissbon","vicenze","kash","antaliya","createNewElement","htmlString","tempElement","document","createElement","innerHTML","firstElementChild","createFullCard","cityName","countryName","description","imagePath","shiftValue","isReverse","closeSvg","swiperWrapper","querySelector","countryCardContainers","querySelectorAll","deleteLastFullCard","previousFullCard","forEach","countryCardContainer","addEventListener","event","undefined","remove","values","style","transform","split","map","item","replace","Math","abs","console","log","cityInformation","dataset","infoAbtCity","sideToOpen","order","countryData","src","fullCountryCard","append","icon","removeChild"],"mappings":"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","file":"cardInformation.5c3baf47.js","sourceRoot":"..","sourcesContent":["import closeSvg from './icons/close.svg';\r\n\r\nconst travels = {\r\n    milan: {\r\n        city: \"Милан\", \r\n        country: \"Италия\", \r\n        information: \"Милан –<br>крупный город на севере Италии, расположенный в Ломбардии, мировая столица дизайна и моды.\"\r\n    },\r\n    venice: {\r\n        city: \"Венеция\",\r\n        country: \"Италия\",\r\n        information: \"Венеция –<br>столица одноименной области на севере Италии. Город расположен на более чем 100 небольших островах в лагуне Адриатического моря.\",\r\n    },\r\n    berlin: {\r\n        city: \"Берлин\",\r\n        country: \"Германия\",\r\n        information: \"Берлин –<br>столица Германии, история которой восходит к XIII в. О непростой истории города в XX в. напоминают Мемориал жертвам Холокоста и граффити на руинах Берлинской стены\",\r\n    },\r\n    fraiburg: {\r\n        city: \"Фрайбург\",\r\n        country: \"Германия\",\r\n        information: \"Фрайбург-им-Брайсгау –<br>оживленный университетский город в горах Шварцвальд на юго-западе Германии, известный своим умеренным климатом и восстановленным после войны средневековым Старым городом.\"\r\n    },\r\n    athens: {\r\n        city: \"Афины\",\r\n        country: \"Греция\",\r\n        information: \"Афины –<br>столица современной Греции и центр древнегреческой цивилизации, которая славилась своим могуществом в эпоху античности.\"\r\n    },\r\n    madrid: {\r\n        city: \"Мадрид\",\r\n        country: \"Испания\",\r\n        information: \"Мадрид – столица Испании в центре Пиренейского полуострова, город элегантных бульваров и огромных ухоженных парков, к числу которых относится парк Буэн-Ретиро.\"\r\n    },\r\n    barcelona: {\r\n        city: \"Барселона\",\r\n        country: \"Испания\",\r\n        information: \"Барселона – столица автономной области Каталония. Этот многонациональный город знаменит своей архитектурой и искусством.\"\r\n    },\r\n    portu: {\r\n        city: \"Порту\",\r\n        country: \"Португалия\",\r\n        information: \"Порту -<br>второй по величине (после Лиссабона) город в Португалии, центр одноимённого округа и муниципалитета.\"\r\n    },\r\n    lissbon: {\r\n        city: \"Лиссабон\",\r\n        country: \"Португалия\",\r\n        information: \"Лиссабон – <br>столица Португалии, расположенная на нескольких холмах и омываемая водами Атлантического океана.\"\r\n    },\r\n    vicenze: {\r\n        city: \"Виченца\",\r\n        country: \"Италия\",\r\n        information: \"Виче́нца — город в итальянской области Венеция, административный центр одноимённой провинции.\"\r\n    },\r\n    kash: {\r\n        city: \"Каш\",\r\n        country: \"Турция\",\r\n        information: \"Каш — город и порт на средиземноморском побережье Турции, центр одноименного района провинции Анталья.\"\r\n    },\r\n    antaliya: {\r\n        city: \"Анталия\",\r\n        country: \"Турция\",\r\n        information: \"Анталья – курортный город, который славится своей Старой гаванью, где швартуются яхты, и пляжами, окруженными огромными отелями.\"\r\n    },\r\n}\r\n\r\nconst createNewElement = (htmlString) => {\r\n    const tempElement = document.createElement('div');\r\n    tempElement.innerHTML = htmlString;\r\n\r\n    return tempElement.firstElementChild;\r\n}\r\n\r\nconst createFullCard = (cityName, countryName, description, imagePath, shiftValue, isReverse = false) => createNewElement(`\r\n    <div style=\"left: ${shiftValue}px\" class=\"full-card ${isReverse ? \"full-card_order_reverse\" : ''} js-full-card\">\r\n        <img class=\"full-card__picture\" src=\"${imagePath}\" alt=\"The city you chose\">\r\n        <p class=\"current__city disposition_absolute\">${cityName}</p>\r\n        <p class=\"current__country disposition_absolute\">${countryName}</p>\r\n        <div class=\"card-about\">\r\n            <p class=\"full-card__text\">\r\n                ${description}\r\n            </p>\r\n            <a class=\"card-about__button\" href=\"#\">Подробнее</a>\r\n            <button class=\"icon\"><img class=\"icon__img\" src=\"${closeSvg}\"></button>\r\n        </div>\r\n    </div>\r\n`);\r\n\r\nconst swiperWrapper = document.querySelector('.swiper-wrapper');\r\nconst countryCardContainers = document.querySelectorAll(\".js-card-container\"); // Все кнопки карточек\r\nconst deleteLastFullCard = [];\r\nlet previousFullCard;\r\n\r\n\r\ncountryCardContainers.forEach((countryCardContainer) => {\r\n    countryCardContainer.querySelector('.js-card').addEventListener(\"click\", event => {\r\n        if(previousFullCard !== undefined) {\r\n            previousFullCard.remove();\r\n        }\r\n        const values = swiperWrapper.style.transform.split(',').map(item => item.replace('translate3d(', '').replace(')', '').replace('px', ''));\r\n        let shiftValue = Math.abs(values[0]);\r\n        \r\n        console.log(shiftValue)\r\n        \r\n        let cityInformation = countryCardContainer.dataset.infoAbtCity;\r\n        let sideToOpen = countryCardContainer.dataset.order;\r\n        \r\n        \r\n        \r\n        const countryData = travels[cityInformation];\r\n        const imagePath = countryCardContainer.querySelector('img').src;\r\n        const fullCountryCard = createFullCard(countryData.city, countryData.country, countryData.information, imagePath, shiftValue);\r\n        console.log(fullCountryCard);\r\n        \r\n        countryCardContainer.append(fullCountryCard);\r\n        previousFullCard = fullCountryCard;\r\n        console.log()\r\n        \r\n        const icon = fullCountryCard.querySelector(\".icon\");\r\n        icon.addEventListener(\"click\", event => {\r\n            countryCardContainer.removeChild(fullCountryCard);\r\n        })\r\n    })\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]}